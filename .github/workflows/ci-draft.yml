name: CI Build and Publish Increments Draft

on:
  pull_request:
    branches:
      - master
      - main
  push:
    branches:
      - master
      - main

jobs:
  Artefact-Version:
    runs-on: ubuntu-latest
    outputs:
      draft_version: ${{ steps.vars.outputs.draft_version }}
      latest_tag: ${{ steps.vars.outputs.latest_tag }}
    steps:
      - name: Checkout code
        uses: actions/checkout@v4
        with:
          fetch-depth: 0

      #      - name: Show Git tags and commit context (diagnostic/debug)
      #        run: git tag --list && git log --oneline --decorate

      - name: Get short SHA for versioning
        id: vars
        run: |
          if LATEST_TAG=$(git describe --tags --abbrev=0 2>/dev/null); then
            :
          else
            LATEST_TAG="v0.0.0"
          fi
          echo "🏷️ Latest Git tag resolved to: $LATEST_TAG"
          LATEST_TAG="${LATEST_TAG#v}"

          echo "latest_tag=$LATEST_TAG" >> $GITHUB_OUTPUT

          SHORT_SHA=$(git rev-parse --short HEAD)
          DRAFT_VERSION="${LATEST_TAG}-${SHORT_SHA}"

          echo "draft_version=$DRAFT_VERSION"
          echo "draft_version=$DRAFT_VERSION" >> $GITHUB_OUTPUT

  Build:
    needs: [Artefact-Version]
    runs-on: ubuntu-latest
    outputs:
      repo_name: ${{ steps.repo_vars.outputs.repo_name }}
      artefact_name: ${{ steps.repo_vars.outputs.artefact_name }}

    steps:
      - name: Checkout source code
        uses: actions/checkout@v4

      - name: Set up JDK
        uses: actions/setup-java@v4
        with:
          distribution: 'temurin'
          java-version: '21'

      - name: Set up Gradle
        uses: gradle/actions/setup-gradle@v4
        with:
          gradle-version: current

      #      - name: Set Sonar Project Key and Name
      #        id: sonar_vars
      #        run: |
      #          repo_sanitized="${GITHUB_REPOSITORY//\//_}"
      #          echo "project_key=$repo_sanitized" >> $GITHUB_OUTPUT
      #          echo "project_name=$repo_sanitized" >> $GITHUB_OUTPUT
      #
      #      - name: Analyze with SonarCloud
      #        uses: SonarSource/sonarqube-scan-action@v5.1.0
      #        with:
      #          args: >
      #            -Dsonar.organization=hmcts
      #            -Dsonar.projectKey=${{ steps.sonar_vars.outputs.project_key }}
      #            -Dsonar.projectName=${{ steps.sonar_vars.outputs.project_name }}
      #            -Dsonar.projectVersion=${{ needs.Artefact-Version.outputs.draft_version }}
      #            -Dsonar.sources=src
      #            -Dsonar.java.binaries=build/classes
      #        env:
      #          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      #          SONAR_TOKEN: ${{ secrets.SONAR_TOKEN }}

      - name: Gradle Build and Publish on Push [Merge]
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        run: |
          VERSION=${{ needs.Artefact-Version.outputs.draft_version }}
      
          gradle build \
            -DAPI_SPEC_VERSION=$VERSION \
            -DGITHUB_REPOSITORY=${{ github.repository }} \
            -DGITHUB_ACTOR=${{ github.actor }} \
            -DGITHUB_TOKEN=$GITHUB_TOKEN
      
          if [ "${{ github.event_name }}" == "push" ]; then
            echo "Push event trigger - Publishing artefact"
            gradle publish \
              -DAPI_SPEC_VERSION=$VERSION \
              -DGITHUB_REPOSITORY=${{ github.repository }} \
              -DGITHUB_ACTOR=${{ github.actor }} \
              -DGITHUB_TOKEN=$GITHUB_TOKEN
          else
            echo "Skipping publish because this is a pull_request"
          fi

      - name: Extract repo name
        #if: github.event_name == 'push'
        id: repo_vars
        run: |
          repo_name=${GITHUB_REPOSITORY##*/}
          echo "repo_name=${repo_name}" >> $GITHUB_OUTPUT
          echo "artefact_name=${repo_name}-${{ needs.Artefact-Version.outputs.draft_version }}" >> $GITHUB_OUTPUT

      - name: Upload JAR Artefact
        uses: actions/upload-artifact@v4
        #if: github.event_name == 'push'
        with:
          name: app-jar
          path: build/libs/${{ steps.repo_vars.outputs.artefact_name }}.jar

  Build-Docker:
    needs: [ Build, Artefact-Version ]
    runs-on: ubuntu-latest
    #if: github.event_name == 'push'

    steps:
      - name: Checkout Code
        uses: actions/checkout@v4

      - name: Download JAR Artefact
        uses: actions/download-artifact@v4
        with:
          name: app-jar
          path: build/libs

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      - name: Log in to GitHub Packages
        uses: docker/login-action@v3
        with:
          registry: ghcr.io
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: Build and Push Docker Image to GitHub & Azure
        uses: docker/build-push-action@v6
        with:
          context: .
          file: Dockerfile
          push: true
          tags: |
            ghcr.io/${{ github.repository }}:${{ needs.Artefact-Version.outputs.draft_version }}
          build-args: |
            BASE_IMAGE=openjdk:21-jdk-slim
            JAR_FILE_NAME=build/libs/${{ needs.Build.outputs.artefact_name }}.jar

#      - name: Log in to Azure Container Registry
#        uses: docker/login-action@v3
#        with:
#          registry: ${{ secrets.AZURE_REGISTRY_LOGIN_SERVER }}
#          username: ${{ secrets.AZURE_REGISTRY_USERNAME }}
#          password: ${{ secrets.AZURE_REGISTRY_PASSWORD }}
#
#      - name: Build and Push Docker Image to GitHub & Azure
#        uses: docker/build-push-action@v6
#        with:
#          context: .
#          file: Dockerfile
#          push: true
#          tags: |
#            ghcr.io/${{ github.repository }}:${{ needs.Artefact-Version.outputs.draft_version }}
#            ${{ secrets.AZURE_REGISTRY_LOGIN_SERVER }}/${{ github.repository }}:${{ needs.Artefact-Version.outputs.draft_version }}
#          build-args: |
#            BASE_IMAGE=ghcr.io/hmcts/java:21-jdk-slim
#            JAR_FILE_NAME=${{ github.repository }}:${{ needs.Artefact-Version.outputs.draft_version }}
