name: Contract Tests Provider

on:
  pull_request:
    branches:
      - master
      - main
  push:
    branches:
      - master
      - main

env:
  is_release: false

jobs:
  Artefact-Version:
    runs-on: ubuntu-latest
    outputs:
      artefact_version: ${{  env.is_release && steps.artefact.outputs.release_version || steps.artefact.outputs.draft_version }}
    steps:
      - name: Checkout code
        uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: Generate Artefact Version
        id: artefact
        uses: hmcts/artefact-version-action@v1
        with:
          release: ${{ env.is_release }}
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

  Provider-Tests:
    needs: [ Artefact-Version ]
    runs-on: ubuntu-latest
    env:
      ARTEFACT_VERSION: ${{ needs.Artefact-Version.outputs.artefact_version }}
      PACT_BROKER_URL: https://hmcts-dts.pactflow.io
      PACT_BROKER_HOST: hmcts-dts.pactflow.io
      PACT_BROKER_TOKEN: ${{ secrets.PACT_BROKER_TOKEN }}
      PACT_VERIFIER_PUBLISH_RESULTS: true
      GIT_COMMIT: ${{ github.sha }}
      GIT_BRANCH: ${{ github.ref_name }}
      PACT_ENV: dev/pactTest
      PACT_APPLICATION_NAME: CPRefDataJudgesProvider
    steps:
      - name: Checkout source code
        uses: actions/checkout@v4

      - name: Set up JDK
        uses: actions/setup-java@v4
        with:
          distribution: temurin
          java-version: 21

      - name: Set up Gradle
        uses: gradle/actions/setup-gradle@v4
        with:
          gradle-version: current

      - name: Set up Node.js
        uses: actions/setup-node@v4

      - name: Install Pact CLI
        run: npm install --save-dev @pact-foundation/pact-cli

      - name: Pact Provider Verification
        env:
          ARTEFACT_VERSION: ${{ needs.Artefact-Version.outputs.artefact_version }}
          GIT_BRANCH: ${{ github.ref_name }}
          PACT_BROKER_URL: ${{ env.PACT_BROKER_URL }}
          PACT_BROKER_HOST: ${{ env.PACT_BROKER_HOST }}
          PACT_BROKER_TOKEN: ${{ env.PACT_BROKER_TOKEN }}
          PACT_ENV: ${{ env.PACT_ENV }}
        run: |
          echo "ARTEFACT_VERSION=$ARTEFACT_VERSION"
          echo "GIT_BRANCH=$GIT_BRANCH"
          echo "PACT_BROKER_URL=$PACT_BROKER_URL"
          echo "PACT_BROKER_HOST=$PACT_BROKER_HOST"
          echo "PACT_ENV=$PACT_ENV"

          # Run provider verification
          gradle pactVerificationTest \
            -Dpact.provider.version="$ARTEFACT_VERSION" \
            -Dpact.verifier.publishResults=true \
            -Dpact.provider.branch="$GIT_BRANCH" \
            -Dpact.broker.token="$PACT_BROKER_TOKEN" \
            -Dpact.broker.url="$PACT_BROKER_URL" \
            -Dpact.env="$PACT_ENV"

      - uses: pactflow/actions/create-or-update-version@v2
        with:
          application_name: ${{ env.PACT_APPLICATION_NAME }}
          version: ${{ needs.Artefact-Version.outputs.artefact_version }}
          broker_url: ${{ env.PACT_BROKER_URL }}
          token: ${{ env.PACT_BROKER_TOKEN }}
          branch: ${{ env.GIT_BRANCH }}
#
#            # https://github.com/pactflow/actions
#            #      - uses: pactflow/actions/publish-pact-files@v1
#            #        with:
#            #          pactflow_token: ${{ secrets.PACTFLOW_TOKEN }}
#            #          pacticipant: my-consumer
#            #          version: ${{ github.sha }}
#            #          pact_directory: ./pacts
#            #          tags: "main, latest"
#
#            #      - uses: pactflow/actions/can-i-deploy@v2
#            #        with:
#            #          application_name: ${{ inputs.pact_application_name }}
#            #          broker_url: ${{ inputs.pact_broker_base_url }}
#            #          token: ${{ secrets.PACT_BROKER_TOKEN }}
#            #          version: ${{ needs.Artefact-Version.outputs.artefact_version }}
#            #          to_environment: ${{ inputs.pact_env }}
#            #          retry_while_unknown: 3 # Optional: number of times to retry while the verification status is unknown
#            #          retry_interval: 5 # Optional: number of seconds to wait between retries
#
#            - name: Publish
#              if: ${{ inputs.is_publish }}
#              env:
#                ARTEFACT_VERSION: ${{ needs.Artefact-Version.outputs.artefact_version }}
#                GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
#                AZURE_DEVOPS_ARTIFACT_USERNAME: ${{ secrets.AZURE_DEVOPS_ARTIFACT_USERNAME }}
#                AZURE_DEVOPS_ARTIFACT_TOKEN: ${{ secrets.AZURE_DEVOPS_ARTIFACT_TOKEN }}
#              run: |
#                echo "Publishing artefact for version: $ARTEFACT_VERSION"
#
#                gradle publish \
#                  -DARTEFACT_VERSION=$ARTEFACT_VERSION \
#                  -DGITHUB_REPOSITORY=${{ github.repository }} \
#                  -DGITHUB_ACTOR=${{ github.actor }} \
#                  -DGITHUB_TOKEN=$GITHUB_TOKEN \
#                  -DAZURE_DEVOPS_ARTIFACT_USERNAME=$AZURE_DEVOPS_ARTIFACT_USERNAME \
#                  -DAZURE_DEVOPS_ARTIFACT_TOKEN=$AZURE_DEVOPS_ARTIFACT_TOKEN



      #      # This step checks PactFlow to determine if any pacts have changed since the last successful verification
      #      # for this provider and branch. If changes are detected, subsequent provider verification should be triggered.
      #      - name: Check for changed pacts
      #        id: canideploy
      #        run: |
      #          npx pact-broker can-i-deploy \
      #            --pacticipant your-provider-name \
      #            --version ${{ github.sha }} \
      #            --broker-base-url ${{ inputs.pact_broker_base_url }} \
      #            --broker-token ${{ secrets.PACT_BROKER_TOKEN }} \
      #            --dry-run \
      #          && echo "changed=true" >> $GITHUB_OUTPUT \
      #          || echo "changed=false" >> $GITHUB_OUTPUT