name: Contract Tests

on:
  workflow_call:
    secrets:
      PACT_BROKER_TOKEN:
        required: true
    inputs:
      artefact_version:
        required: true
        type: string
      pact_application_name:
        required: true
        type: string
      pact_broker_base_url:
        required: false
        type: string
        default: "https://hmcts-dts.pactflow.io"
      pact_env:
        required: false
        type: string
        default: dev/pactTest

jobs:
  Provider-Deploy:
    runs-on: ubuntu-latest
    env:
      ARTEFACT_VERSION: ${{ inputs.artefact_version }}
      PACT_BROKER_URL: ${{ inputs.pact_broker_base_url }}
      PACT_BROKER_TOKEN: ${{ secrets.PACT_BROKER_TOKEN }}
      PACT_APPLICATION_NAME: ${{ inputs.pact_application_name }}
      PACT_ENV: ${{ inputs.pact_env }}
    steps:
      - name: Checkout source code
        uses: actions/checkout@v4

      - name: Set up Node.js
        uses: actions/setup-node@v4

      - name: Install Pact CLI
        run: npm install -g @pact-foundation/pact-cli

      - name: Tag Version
        run: |
          pact-broker create-version-tag \
            --pacticipant "$PACT_APPLICATION_NAME" \
            --version "$ARTEFACT_VERSION" \
            --tag "$PACT_ENV" \
            --broker-base-url "$PACT_BROKER_URL" \
            --broker-token "$PACT_BROKER_TOKEN"

      - name: Can I Deploy
        run: |
          pact-broker can-i-deploy \
            --pacticipant "$PACT_APPLICATION_NAME" \
            --version "$ARTEFACT_VERSION" \
            --to-environment "$PACT_ENV" \
            --broker-base-url "$PACT_BROKER_URL" \
            --broker-token "$PACT_BROKER_TOKEN" \
            --output table
          can_i_deploy_status=$?
          if [ "$can_i_deploy_status" -ne 0 ]; then
            echo "❌ Can-I-Deploy failed — this version is NOT safe to deploy to $PACT_ENV - (deploy status: $can_i_deploy_status)"
            exit 1
          else
            echo "✅ Can-I-Deploy succeeded — this version is safe to deploy to $PACT_ENV"
          fi
